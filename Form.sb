''' Form
''' Version 0.4a
''' Copyright Â© 2016 Nonki Takahashi.  The MIT License.
''' Last update 2016-04-27
''' Challenge 2016-01/02
''' Repository https://github.com/nonkit/Form.git
''' Program ID KMT677-2
'
formName = "Form.sb"
grid = "False"
DrawForm()
' show form array
buf = ""
For i = 1 To nForm
  buf = buf + "form[" + i + "]: " + form[i] + CR + LF
EndFor
Controls.SetTextBoxText(frm["obj"], buf)
While "True"
  If buttonClicked Then
    frm = form[5]
    formName = Controls.GetTextBoxText(frm["obj"])
    GraphicsWindow.Clear()
    DrawForm()
    buttonClicked = "False"
  Else
    Program.Delay(200)
  EndIf
EndWhile
Sub DrawForm
  ''' Draw form
  Form_GetForm()
  Form_ShowForm()
  If grid Then
    gap = 10
    color = "#999999"
    DrawGrids()
    gap = 100
    color = "#666666"
    DrawGrids()
  EndIf
EndSub
Sub DrawGrids
  ''' Draw grids
  ''' param gap
  ''' param color
  GraphicsWindow.PenWidth = 1
  GraphicsWindow.PenColor = color
  For y = gap To gh Step gap
    GraphicsWindow.DrawLine(0, y, gw, y)
  EndFor
  For x = gap To gw Step gap
    GraphicsWindow.DrawLine(x, 0, x, gh)
  EndFor
EndSub
Sub Form_ShowForm
  ''' Form | Show form
  ''' param form - array of the form
  ''' param nForm - number of objects in the form
  ''' return gw - width of the graphics window
  ''' return gh - height of the graphics window
  For i = 1 To nForm
    frm = form[i]
    If frm["func"] = "form" Then
      ' func=form;bg=LightGray;gx=10;gy=10;gw=598;gh=428;title=Form 0.4a;
      If frm["bg"] <> "" Then
        GraphicsWindow.BackgroundColor = frm["bg"]
      EndIf
      If frm["gx"] <> "" Then
        GraphicsWindow.Left = frm["gx"]
      EndIf
      If frm["gx"] <> "" Then
        GraphicsWindow.Top = frm["gy"]
      EndIf
      If frm["gw"] <> "" Then
        GraphicsWindow.Width = frm["gw"]
      EndIf
      gw = GraphicsWindow.Width
      If frm["gh"] <> "" Then
        GraphicsWindow.Height = frm["gh"]
      EndIf
      gh = GraphicsWindow.Height
      If frm["title"] <> "" Then
        GraphicsWindow.Title = frm["title"]
      EndIf
    ElseIf frm["func"] = "text" Then
      ' func=text;text=Folder;x=10;y=15;bc=Black;fn=Segoe UI;fs=12;fb=True;fi=False;
      ' func=text;text=Filename;x=10;y=45;bc=Black;fn=Segoe UI;fs=12;fb=True;fi=False;
      GraphicsWindow.FontName = frm["fn"]
      GraphicsWindow.FontSize = frm["fs"]
      GraphicsWindow.FontBold = frm["fb"]
      GraphicsWindow.FontItalic = frm["fi"]
      GraphicsWindow.BrushColor = frm["bc"]
      frm["obj"] = Shapes.AddText(frm["text"])
      Shapes.Move(frm["obj"], frm["x"], frm["y"])
    ElseIf frm["func"] = "tbox" Then
      ' func=tbox;x=70;y=12;width=460;height=22;bc=Black;fn=Segoe UI;fs=12;fb=True;fi=False;text=.;
      ' func=tbox;x=70;y=42;width=140;height=22;bc=Black;fn=Segoe UI;fs=12;fb=True;fi=False;text=Form.sb;
      GraphicsWindow.FontName = frm["fn"]
      GraphicsWindow.FontSize = frm["fs"]
      GraphicsWindow.FontBold = frm["fb"]
      GraphicsWindow.FontItalic = frm["fi"]
      GraphicsWindow.BrushColor = frm["bc"]
      frm["obj"] = Controls.AddTextBox(frm["x"], frm["y"])
      Controls.SetSize(frm["obj"], frm["width"], frm["height"])
      Controls.SetTextBoxText(frm["obj"], frm["text"])
    ElseIf frm["func"] = "btn" Then
      ' func=btn;caption=OK;x=220;y=40;width=28;height=26;bc=Black;fn=Segoe UI;fs=12;fb=True;fi=False;
      GraphicsWindow.FontName = frm["fn"]
      GraphicsWindow.FontSize = frm["fs"]
      GraphicsWindow.FontBold = frm["fb"]
      GraphicsWindow.FontItalic = frm["fi"]
      GraphicsWindow.BrushColor = frm["bc"]
      frm["obj"] = Controls.AddButton(frm["caption"], frm["x"], frm["y"])
      Controls.SetSize(frm["obj"], frm["width"], frm["height"])
      Controls.ButtonClicked = OnButtonClicked
    ElseIf frm["func"] = "rect" Then
      ' func=rect;x=546;y=10;width=2;height=32;scale=2;pw=0;pc=Black;bc=#999999;
      GraphicsWindow.PenWidth = frm["pw"]
      GraphicsWindow.PenColor = frm["pc"]
      GraphicsWindow.BrushColor = frm["bc"]
      frm["obj"] = Shapes.AddRectangle(frm["width"], frm["height"])
      Shapes.Move(frm["obj"], frm["x"], frm["y"])
    ElseIf frm["func"] = "img" Then
      ' func=img;src=img/Form32.png;x=556;y=10;width=32;height=32;
      img = ImageList.LoadImage(Program.Directory + "/" + frm["src"])
      ix = ImageList.GetWidthOfImage(img)
      iy = ImageList.GetHeightOfImage(img)
      scaleX = frm["width"] / ix
      scaleY = frm["height"] / iy
      frm["obj"] = Shapes.AddImage(img)
      Shapes.Move(frm["obj"], frm["x"] + (frm["width"] - ix) / 2, frm["y"] + (frm["height"] - iy) / 2)
      Shapes.Zoom(frm["obj"], scaleX, scaleY)
    ElseIf frm["func"] = "mtbox" Then
      ' func=mtbox;x=10;y=72;width=578;height=346;bc=Black;fn=Segoe UI;fs=12;fb=True;fi=False;
      GraphicsWindow.FontName = frm["fn"]
      GraphicsWindow.FontSize = frm["fs"]
      GraphicsWindow.FontBold = frm["fb"]
      GraphicsWindow.FontItalic = frm["fi"]
      GraphicsWindow.BrushColor = frm["bc"]
      frm["obj"] = Controls.AddMultiLineTextBox(frm["x"], frm["y"])
      Controls.SetSize(frm["obj"], frm["width"], frm["height"])
    EndIf
    form[i] = frm
  EndFor
EndSub
Sub OnButtonClicked
  buttonClicked = "True"
EndSub
Sub Form_GetForm
  ''' Form | Get form from file
  ''' param formName - form file name
  ''' return form - array for the form
  folder = Program.Directory
  buf = File.ReadContents(folder + "/" + formName)
  Buf_Init()
  nForm = 0
  While p <= len
    Buf_GetLine()
    Line_RemoveLeadingSpace()
    If Text.StartsWith(line, "'") Then
      func = Text.GetIndexOf(line, "func=")
      If 0 < func Then
        nForm = nForm + 1
        form[nForm] = Text.GetSubTextToEnd(line, func)
      EndIf
    EndIf
  EndWhile
EndSub
Sub Line_RemoveLeadingSpace
  ''' Line | Remove leading space
  ''' param line - to remove leading space
  ''' return line - the result
  Stack.PushValue("local", p)
  p = 1
  While Text.GetSubText(line, p, 1) = " "
    p = p + 1
  EndWhile
  line = Text.GetSubTextToEnd(line, p)
  p = Stack.PopValue("local")
EndSub
Sub Buf_GetLine
  ''' Buffer | Get line from buf
  ''' param p - pointer to buf
  ''' param buf - buffer
  ''' param len - length of the buffer
  ''' return line - current line
  ''' return p - updated pointer to next line in buf
  If p <= len Then
    nl = Text.GetIndexOf(Text.GetSubTextToEnd(buf, p), CR)
    If 0 < nl Then
      line = Text.GetSubText(buf, p, nl - 1)
      p = p + nl
    Else
      line = Text.GetSubTextToEnd(buf, p)
      p = len + 1
    EndIf
    If Text.GetSubText(buf, p, 1) = LF Then
      p = p + 1
    EndIf
  EndIf
EndSub
Sub Buf_Init
  ''' param buf - buffer
  ''' return CR - carriage return
  ''' return LF - line feed
  ''' return len - length of text in buf
  ''' return p - pointer to buf
  CR = Text.GetCharacter(13)
  LF = Text.GetCharacter(10)
  len = Text.GetLength(buf)
  p = 1
EndSub
